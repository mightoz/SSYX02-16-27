#!/usr/bin/env python
PKG = 'numpy'
import roslib; roslib.load_manifest(PKG)

import rospy
from rospy_tutorials.msg import Floats
from rospy.numpy_msg import numpy_msg
from std_msgs.msg import String

#def callback(data):
#    print "currentPos working"

   # rospy.Subscriber("goto", numpy_msg(Floats),
  #    pub = rospy.Publisher('currentPos', numpy_msg(Floats),queue_size=10)
 #   pub.publish(data)

#    print rospy.get_name(), "I heard %s"%str(data.data)

def coordListener():
     rospy.init_node('positionHandler', anonymous=True)
     pub = rospy.Publisher("moveTo", numpy_msg(Floats), queue_size=10)
     r = rospy.Rate(10)
     while not rospy.is_shutdown():
#          msg = 
#          pub.publish(msg)
           r.sleep()
#    rospy.init_node('positionHandler')
#    rospy.wait_for_service('moveTo')
#    try:
#        a = rospy.ServiceProxy('moveTo', numpy_msg(Floats))
#        resp = a(true)
#        print rospy.get_name(), "I heard %s"%str(resp) 
#    except rospy.ServiceException, e:
#        print "Service call failed: %s"%e

#    rospy.Subscriber("currentPos", numpy_msg(Floats), callback)
#    rospy.spin()

if __name__ == '__main__':
#    if len(sys.argv) == 1:
#        x = str(sys.argv[1])
#	y = int(sys.argv[2])
        coordListener()
